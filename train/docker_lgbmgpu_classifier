FROM ubuntu:16.04
WORKDIR /root


# Install Python3
RUN apt-get update && \
apt-get -y install python3.6 && \
apt-get -y install python3-pip && \
update-alternatives --install /usr/bin/python python /usr/bin/python3 10

# Install packages
RUN pip3 install scikit-learn==0.21.3 pandas==0.25.0 && \
    pip3 install imbalanced-learn==0.5.0 && \
    pip3 install pyYAML==5.1.2 && \
    pip3 install cloudml-hypertune
#echo "alias python=python3" >> ~/.bash_aliases && \
#/bin/bash -c "source ~/.bash_aliases" && \
#echo "alias pip=pip3" >> ~/.bash_aliases && \
#/bin/bash -c "source ~/.bash_aliases"
#pip install setuptools numpy scipy scikit-learn -U && \
#cd LightGBM/python-package && \
#python setup.py install --precompile

# Installs minimum CUDA drivers
RUN apt-get update && \
apt-get -y install --no-install-recommends nvidia-375 && \
apt-get -y install --no-install-recommends nvidia-opencl-icd-375 nvidia-opencl-dev opencl-headers

# Installs dependencies
RUN apt-get -y install --no-install-recommends git cmake build-essential libboost-dev libboost-system-dev libboost-filesystem-dev

# Get certificates to clone from Git
RUN apt-get -y install ca-certificates

# Installs LGBM w/GPU
RUN git clone --recursive https://github.com/microsoft/LightGBM && \
cd LightGBM && \
mkdir build ; cd build && \
cmake -DUSE_GPU=1 .. && \
# if you have installed NVIDIA CUDA to a customized location, you should specify paths to OpenCL headers and library like the following:
# cmake -DUSE_GPU=1 -DOpenCL_LIBRARY=/usr/local/cuda/lib64/libOpenCL.so -DOpenCL_INCLUDE_DIR=/usr/local/cuda/include/ ..
make -j$(nproc) && \
cd

# Installs google cloud sdk, this is mostly for using gsutil to export model.
SHELL ["/bin/bash", "-c"]
RUN apt-get update && \
    apt-get install -y cmake build-essential gcc g++ git wget && \

    cd LightGBM/python-package && \
    python setup.py install --precompile && \

    rm -rf /usr/local/src/* && \
    pip install lightgbm==2.2.3 --install-option=--gpu && \
    wget -nv \
    https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz && \
    mkdir /root/tools && \
    tar xvzf google-cloud-sdk.tar.gz -C /root/tools && \
    rm google-cloud-sdk.tar.gz && \
    /root/tools/google-cloud-sdk/install.sh --usage-reporting=false \
        --path-update=false --bash-completion=false \
        --disable-installation-options && \
    rm -rf /root/.config/* && \
    ln -s /root/.config /config && \
    # Remove the backup directory that gcloud creates
    rm -rf /root/tools/google-cloud-sdk/.install/.backup && \
    echo '[GoogleCompute]\nservice_account = default' > /etc/boto.cfg && \
    mkdir /root/mlatoms && \
    apt-get autoremove -y && apt-get clean

# Path configuration
ENV PATH $PATH:/root/tools/google-cloud-sdk/bin

# Copies the trainer code
COPY ./train/entrypoint_lgbm_classifier.py /root/mlatoms/entrypoint_lgbm_classifier.py
COPY ./train/trainer.py /root/mlatoms/trainer.py
COPY validation.py /root/mlatoms/validation.py
COPY atoms.py /root/mlatoms/atoms.py

# Sets up the entry point to invoke the trainer.
ENTRYPOINT ["python3", "mlatoms/entrypoint_lgbmgpu_classifier.py"]